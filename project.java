/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algoproject;

import java.io.DataInputStream;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bakhtawar
 */
public class project extends javax.swing.JFrame {

    static project t;
    int n = 6;
    ArrayDs bt = new ArrayDs(n);

    ArrayDs wt = new ArrayDs(n);

    ArrayDs tat = new ArrayDs(n);

    ArrayDs a = new ArrayDs(n);
    String co;

    /**
     * Creates new form project
     */
    public project() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane4 = new javax.swing.JDesktopPane();
        COM = new javax.swing.JComboBox<>();
        txt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        pr1 = new javax.swing.JTextField();
        pr3 = new javax.swing.JTextField();
        pr2 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        pr5 = new javax.swing.JTextField();
        pr6 = new javax.swing.JTextField();
        pr4 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jDesktopPane6 = new javax.swing.JDesktopPane();
        labw3 = new javax.swing.JLabel();
        ll = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tt = new javax.swing.JTable();
        b1 = new javax.swing.JDesktopPane();
        l2 = new javax.swing.JTextField();
        l3 = new javax.swing.JTextField();
        l1 = new javax.swing.JTextField();
        t1 = new javax.swing.JTextField();
        b2 = new javax.swing.JTextField();
        b3 = new javax.swing.JTextField();
        q1 = new javax.swing.JTextField();
        ok = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));
        setUndecorated(true);

        jDesktopPane4.setBackground(java.awt.Color.orange);

        COM.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        COM.setForeground(new java.awt.Color(0, 0, 204));
        COM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select ALGO :)", "Round Robbin", "SJF", "Priority Scheduling", "LIFO", " " }));
        COM.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        COM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COMActionPerformed(evt);
            }
        });

        txt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt.setForeground(new java.awt.Color(153, 0, 153));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Pr1");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Pr2");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Pr3");

        pr1.setBorder(null);
        pr1.setOpaque(false);
        pr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pr1ActionPerformed(evt);
            }
        });

        pr3.setBorder(null);
        pr3.setOpaque(false);

        pr2.setBorder(null);
        pr2.setOpaque(false);
        pr2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pr2ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Pr4");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Pr5");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Pr6");

        pr5.setBorder(null);
        pr5.setOpaque(false);

        pr6.setBorder(null);
        pr6.setOpaque(false);
        pr6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pr6ActionPerformed(evt);
            }
        });

        pr4.setBorder(null);
        pr4.setOpaque(false);
        pr4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pr4ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Enter Priorities for Process :-");
        jLabel17.setOpaque(true);

        jDesktopPane4.setLayer(COM, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(txt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(pr1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(pr3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(pr2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(pr5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(pr6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(pr4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane4Layout = new javax.swing.GroupLayout(jDesktopPane4);
        jDesktopPane4.setLayout(jDesktopPane4Layout);
        jDesktopPane4Layout.setHorizontalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(COM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel14))
                                .addGap(18, 18, 18)
                                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pr1, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                    .addComponent(pr4))
                                .addGap(11, 11, 11)))
                        .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel15))
                                .addGap(18, 18, 18)
                                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pr2, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                    .addComponent(pr5))
                                .addGap(47, 47, 47)
                                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jDesktopPane4Layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addGap(18, 18, 18)
                                        .addComponent(pr6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jDesktopPane4Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(18, 18, 18)
                                        .addComponent(pr3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jDesktopPane4Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane4Layout.setVerticalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(COM, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(txt))
                .addGap(18, 18, 18)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDesktopPane4Layout.createSequentialGroup()
                        .addGap(0, 8, Short.MAX_VALUE)
                        .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)))
                    .addComponent(pr2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jDesktopPane4Layout.createSequentialGroup()
                        .addComponent(pr1)
                        .addGap(1, 1, 1))
                    .addComponent(pr3))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jDesktopPane4Layout.createSequentialGroup()
                        .addComponent(pr4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                    .addComponent(pr5)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel16)
                        .addComponent(pr6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)))
                .addGap(81, 81, 81))
        );

        jDesktopPane6.setBackground(new java.awt.Color(0, 51, 51));

        labw3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labw3.setForeground(new java.awt.Color(255, 0, 0));

        ll.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ll.setForeground(new java.awt.Color(255, 0, 0));

        tt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        tt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProcessID", "Burst Time", "Waiting Time", "Turn Around Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tt.setGridColor(new java.awt.Color(0, 51, 51));
        tt.setRowHeight(25);
        jScrollPane1.setViewportView(tt);
        if (tt.getColumnModel().getColumnCount() > 0) {
            tt.getColumnModel().getColumn(0).setResizable(false);
            tt.getColumnModel().getColumn(0).setPreferredWidth(60);
        }

        jDesktopPane6.setLayer(labw3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane6.setLayer(ll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane6.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane6Layout = new javax.swing.GroupLayout(jDesktopPane6);
        jDesktopPane6.setLayout(jDesktopPane6Layout);
        jDesktopPane6Layout.setHorizontalGroup(
            jDesktopPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane6Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jDesktopPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labw3, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                    .addComponent(ll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(102, 102, 102))
        );
        jDesktopPane6Layout.setVerticalGroup(
            jDesktopPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane6Layout.createSequentialGroup()
                .addGroup(jDesktopPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane6Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(labw3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ll, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane6Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        b1.setBackground(new java.awt.Color(51, 0, 204));

        l1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l1ActionPerformed(evt);
            }
        });

        b3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                b3KeyReleased(evt);
            }
        });

        q1.setText("Enter time Quantum");
        q1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                q1MouseClicked(evt);
            }
        });
        q1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q1ActionPerformed(evt);
            }
        });

        ok.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ok.setText("Start");
        ok.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okMouseClicked(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(153, 0, 153));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("P1");

        jLabel4.setBackground(new java.awt.Color(51, 0, 51));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("P2");

        jLabel6.setBackground(new java.awt.Color(51, 0, 51));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("P4");

        jLabel7.setBackground(new java.awt.Color(51, 0, 51));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("P3");

        jLabel8.setBackground(new java.awt.Color(51, 0, 51));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("P5");

        jLabel9.setBackground(new java.awt.Color(51, 0, 51));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("P6");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Enter The Burst Time :-");
        jLabel10.setOpaque(true);

        b1.setLayer(l2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(l3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(l1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(t1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(b2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(b3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(q1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(ok, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        b1.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout b1Layout = new javax.swing.GroupLayout(b1);
        b1.setLayout(b1Layout);
        b1Layout.setHorizontalGroup(
            b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(b1Layout.createSequentialGroup()
                .addGroup(b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(b1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, b1Layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addGroup(b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(b1Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(b1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(41, 41, 41))
                            .addGroup(b1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(b1Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(q1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)))
                .addGroup(b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(b1Layout.createSequentialGroup()
                        .addComponent(ok)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(b1Layout.createSequentialGroup()
                        .addGroup(b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(l3, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(b3))
                        .addGap(0, 90, Short.MAX_VALUE))))
            .addGroup(b1Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        b1Layout.setVerticalGroup(
            b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(b1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(b1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(q1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ok))
                .addGap(35, 35, 35))
        );

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setBackground(new java.awt.Color(255, 0, 0));
        jLabel5.setFont(new java.awt.Font("Juice ITC", 1, 64)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("*");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 0, -1, 40));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 36)); // NOI18N
        jLabel1.setText("---");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 0, 40, 30));

        jLabel3.setBackground(new java.awt.Color(0, 153, 153));
        jLabel3.setForeground(new java.awt.Color(0, 204, 204));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1017, 39));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1206, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDesktopPane6)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jDesktopPane4)
                        .addGap(18, 18, 18)
                        .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDesktopPane4)
                    .addComponent(b1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jDesktopPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        setSize(new java.awt.Dimension(1206, 634));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void COMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COMActionPerformed

        co = (String) COM.getSelectedItem();

        String w = "So You ask for Round Robbin :)";
        String x = "So You ask for SJS :)";
        String y = "So you ask for Priority Scheduling :)";
        String z = "So you ask for LIFO :)";

        if (co.equals("Round Robbin")) {
            txt.setText(w);
            VanishBoxes();
        } else if (co.equals("SJS")) {
            txt.setText(x);
            VanishBoxes();

        } else if (co.equals("Priority Scheduling")) {
            txt.setText(y);
            AbraKaDabra();

        } else {
            txt.setText(z);
            VanishBoxes();
        }


    }//GEN-LAST:event_COMActionPerformed

    private void l1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_l1ActionPerformed

    private void okMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okMouseClicked
        if (COM.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please SELECT YOUR ALGO FIRST", "", JOptionPane.ERROR_MESSAGE);
        } else if (co.equals("Round Robbin")) {

            rr();

        } else if (co.equals("SJF")) {

            SJF();

        } else if (co.equals("Priority Scheduling")) {

            PS();

        }


    }//GEN-LAST:event_okMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        this.setState(this.ICONIFIED);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseClicked

    private void q1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_q1MouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_q1MouseClicked

    private void q1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_q1ActionPerformed

    private void b3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b3KeyReleased
        q1.setText("");
    }//GEN-LAST:event_b3KeyReleased

    private void pr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pr1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pr1ActionPerformed

    private void pr4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pr4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pr4ActionPerformed

    private void pr6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pr6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pr6ActionPerformed

    private void pr2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pr2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pr2ActionPerformed

    public void rr() {
        int xc = 0, u = 0, f = 0, gh = 0;
        DataInputStream in = new DataInputStream(System.in);
        Integer i, j, k, q, sum = 0;

        bt.setValue(0, Integer.parseInt(l1.getText()));
        bt.setValue(1, Integer.parseInt(l2.getText()));
        bt.setValue(2, Integer.parseInt(l3.getText()));
        bt.setValue(3, Integer.parseInt(t1.getText()));
        bt.setValue(4, Integer.parseInt(b2.getText()));
        bt.setValue(5, Integer.parseInt(b3.getText()));

        q = Integer.parseInt(q1.getText());

        for (i = 0; i < n; i++) {
            gh = bt.getValue(i);
            a.setValue(i, gh);

        }
        for (i = 0; i < n; i++) {
            wt.setValue(i, 0);
        }
        do {
            for (i = 0; i < n; i++) {
                if (bt.getValue(i) > q) {
                    int t = bt.getValue(i);
                    t -= q;
                    bt.setValue(i, t);

                    for (j = 0; j < n; j++) {
                        if ((j != i) && (bt.getValue(j) != 0)) {
                            u = wt.getValue(j);
                            u += q;
                            wt.setValue(j, u);

                        }

                    }
                } else {
                    for (j = 0; j < n; j++) {

                        if ((j != i) && (bt.getValue(j) != 0)) {
                            xc = wt.getValue(j);
                            xc += bt.getValue(i);
                            wt.setValue(j, xc);

                        }
                    }
                    bt.setValue(i, 0);
                }
            }
            sum = 0;
            for (k = 0; k < n; k++) {
                sum = sum + bt.getValue(k);
            }
        } while (sum != 0);
        for (i = 0; i < n; i++) {
            f = tat.getValue(i);
            f = wt.getValue(i) + a.getValue(i);
            tat.setValue(i, f);

        }

        if (time.x == null) {
            time.x = new time();
            time.x.setVisible(true);

            for (int l = 0; l < 6; l++) {
                for (int m = 1; m <= 100; m++) {
                    try {
                        Thread.sleep(5);
                    } catch (InterruptedException ex) {
                        System.out.println(ex);
                    }
                    time.l4.setText("PROCESS " + Integer.toString(l + 1));
                    time.x.bb.paintImmediately(0, 0, 1500, 1500);
                    time.x.jPanel1.paintImmediately(0, 0, 1500, 1500);
                    time.x.bb.setStringPainted(true);
                    time.x.bb.setValue(m);
                    time.ll.setText(Double.toString(wt.getValue(l)) + " SEC");
                    time.ll2.setText(Double.toString(tat.getValue(l)) + " SEC");
                }
                if (l == 5) {
                    time.x.setVisible(false);
                }
            }

        } else {

            time.x.setVisible(true);
            for (int l = 0; l < 6; l++) {
                for (int m = 1; m <= 100; m++) {
                    try {
                        Thread.sleep(5);
                    } catch (InterruptedException ex) {
                        System.out.println(ex);
                    }
                    time.l4.setText("PROCESS " + Integer.toString(l + 1));
                    time.x.bb.paintImmediately(0, 0, 1500, 1500);
                    time.x.jPanel1.paintImmediately(0, 0, 1500, 1500);
                    time.x.bb.setStringPainted(true);
                    time.x.bb.setValue(m);
                    time.l4.setText("PROCESS " + Integer.toString(l + 1));
                    time.ll2.setText(Double.toString(tat.getValue(l)) + " SEC ");
                }
                if (l == 5) {
                    time.x.setVisible(false);
                }
            }
        }

        l1.setText("");
        l2.setText("");
        l3.setText("");
        t1.setText("");
        b2.setText("");
        b3.setText("");
        q1.setText("");

        String g = String.valueOf(a.getValue(0));
        String jh = String.valueOf(wt.getValue(0));
        String jhh = String.valueOf(tat.getValue(0));
        String fh = String.valueOf(a.getValue(1));
        String ah = String.valueOf(wt.getValue(1));
        String bh = String.valueOf(tat.getValue(1));
        String zh = String.valueOf(a.getValue(2));
        String xh = String.valueOf(wt.getValue(2));
        String ch = String.valueOf(tat.getValue(2));
        String eh = String.valueOf(a.getValue(3));
        String yh = String.valueOf(wt.getValue(3));
        String th = String.valueOf(tat.getValue(3));
        DefaultTableModel model = (DefaultTableModel) tt.getModel();
        String[] str = {"Process 1", g + "              ", jh + "              ", jhh + "             "};
        String[] str1 = {"Process 2", fh + "              ", ah + "              ", bh + "              "};
        String[] str2 = {"Process 3", zh + "              ", xh + "              ", ch + "              "};
        String[] str3 = {"Process 4", eh + "              ", yh + "              ", th + "              "};
        String[] str4 = {"Process 5", String.valueOf(a.getValue(4)) + "              ", String.valueOf(wt.getValue(4)) + "              ", String.valueOf(tat.getValue(4)) + "              "};
        String[] str5 = {"Process 6", String.valueOf(a.getValue(5)) + "              ", String.valueOf(wt.getValue(5)) + "              ", String.valueOf(tat.getValue(5)) + "              "};
        model.addRow(str);
        model.addRow(str1);
        model.addRow(str2);
        model.addRow(str3);
        model.addRow(str4);
        model.addRow(str5);
        tt.setModel(model);
        /*String fg="Process      BT   WT     TAT";
labw.setText(fg);

String jj=("Process 1      "+a.getValue(0)+"   "+wt.getValue(0)+"       "+tat.getValue(0));
labw2.setText(jj);
String fj=("Process 2      "+a.getValue(1)+"   "+wt.getValue(1)+"       "+tat.getValue(1));
ll2.setText(fj);
String ej=("Process 3      "+a.getValue(2)+"   "+wt.getValue(2)+"       "+tat.getValue(2));
ll3.setText(ej);
String rj=("Process 4      "+a.getValue(3)+"   "+wt.getValue(3)+"       "+tat.getValue(3));
ll4.setText(rj);
String tt=("Process 5      "+a.getValue(4)+"   "+wt.getValue(4)+"       "+tat.getValue(4));
ll5.setText(tt);
String tr=("Process 6      "+a.getValue(5)+"   "+wt.getValue(5)+"       "+tat.getValue(5));*/
//ll6.setText(tr);

        float avg_wt = 0;
        float avg_tat = 0;
        for (j = 0; j < n; j++) {

            avg_wt += wt.getValue(j);
        }
        for (j = 0; j < n; j++) {
            avg_tat += tat.getValue(j);
        }

        labw3.setText("Average waiting time " + (avg_wt / n));
        ll.setText("\nAverage turn around time " + (avg_tat / n));

    }

    public void SJF() { ////////////////////////////////////////////////////////////////////////

        ArrayDs pro = new ArrayDs(n);
        ArrayDs ptime = new ArrayDs(n);
        ArrayDs wait = new ArrayDs(n);
        int temp, total = 0;
        float avg;

        ptime.setValue(0, Integer.parseInt(l1.getText()));
        ptime.setValue(1, Integer.parseInt(l2.getText()));
        ptime.setValue(2, Integer.parseInt(l3.getText()));
        ptime.setValue(3, Integer.parseInt(t1.getText()));
        ptime.setValue(4, Integer.parseInt(b2.getText()));
        ptime.setValue(5, Integer.parseInt(b3.getText()));

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {

                if (ptime.getValue(i) > ptime.getValue(j)) {
                    temp = ptime.getValue(i);
                    ptime.setValue(i, ptime.getValue(j));
                    ptime.setValue(j, temp);
                    temp = pro.getValue(i);
                    pro.setValue(i, pro.getValue(j));
                    pro.setValue(j, temp);
                }
            }
        }

        wait.setValue(0, 0);

        for (int i = 1; i < n; i++) {
            int nn = wait.getValue(i - 1) + ptime.getValue(i - 1);
            wait.setValue(i, nn);
            total = total + wait.getValue(i);
        }

        for (int i = 0; i < n; i++) {

            tat.setValue(i, ptime.getValue(i) + wait.getValue(i));

        }

        avg = (float) total / n;
////////////////////////////////////////////////////////////////////////
        if (time.x == null) {
            time.x = new time();
            time.x.setVisible(true);

            for (int l = 0; l < 6; l++) {
                for (int m = 1; m <= 100; m++) {
                    try {
                        Thread.sleep(5);
                    } catch (InterruptedException ex) {
                        System.out.println(ex);
                    }
                    time.l4.setText("PROCESS " + Integer.toString(l + 1));
                    time.x.bb.paintImmediately(0, 0, 1500, 1500);
                    time.x.jPanel1.paintImmediately(0, 0, 1500, 1500);
                    time.x.bb.setStringPainted(true);
                    time.x.bb.setValue(m);
                    time.ll.setText(Double.toString(wait.getValue(l)) + " SEC");
                    time.ll2.setText(Double.toString(tat.getValue(l)) + " SEC");
                }
                if (l == 5) {
                    time.x.setVisible(false);
                }
            }

        } else {

            time.x.setVisible(true);
            for (int l = 0; l < 6; l++) {
                for (int m = 1; m <= 100; m++) {
                    try {
                        Thread.sleep(5);
                    } catch (InterruptedException ex) {
                        System.out.println(ex);
                    }
                    time.l4.setText("PROCESS " + Integer.toString(l + 1));
                    time.x.bb.paintImmediately(0, 0, 1500, 1500);
                    time.x.jPanel1.paintImmediately(0, 0, 1500, 1500);
                    time.x.bb.setStringPainted(true);
                    time.x.bb.setValue(m);
                    time.l4.setText("PROCESS " + Integer.toString(l + 1));
                    time.ll2.setText(Double.toString(tat.getValue(l)) + " SEC");
                }
                if (l == 5) {
                    time.x.setVisible(false);
                }
            }
        }

        l1.setText("");
        l2.setText("");
        l3.setText("");
        t1.setText("");
        b2.setText("");
        b3.setText("");
        q1.setText("");

        String g = String.valueOf(ptime.getValue(0));
        String jh = String.valueOf(wait.getValue(0));
        String jhh = String.valueOf(tat.getValue(0));
        String fh = String.valueOf(ptime.getValue(1));
        String ah = String.valueOf(wait.getValue(1));
        String bh = String.valueOf(tat.getValue(1));
        String zh = String.valueOf(ptime.getValue(2));
        String xh = String.valueOf(wait.getValue(2));
        String ch = String.valueOf(tat.getValue(2));
        String eh = String.valueOf(ptime.getValue(3));
        String yh = String.valueOf(wait.getValue(3));
        String th = String.valueOf(tat.getValue(3));
        DefaultTableModel model = (DefaultTableModel) tt.getModel();
        String[] str = {"Process 1", g + "              ", jh + "              ", jhh + "              "};
        String[] str1 = {"Process 2", fh + "              ", ah + "              ", bh + "              "};
        String[] str2 = {"Process 3", zh + "              ", xh + "              ", ch + "              "};
        String[] str3 = {"Process 4", eh + "              ", yh + "              ", th + "              "};
        String[] str4 = {"Process 5", String.valueOf(ptime.getValue(4)) + "              ", String.valueOf(wait.getValue(4)) + "              ", String.valueOf(tat.getValue(4)) + "              "};
        String[] str5 = {"Process 6", String.valueOf(ptime.getValue(5)) + "              ", String.valueOf(wait.getValue(5)) + "              ", String.valueOf(tat.getValue(5)) + "              "};
        model.addRow(str);
        model.addRow(str1);
        model.addRow(str2);
        model.addRow(str3);
        model.addRow(str4);
        model.addRow(str5);
        tt.setModel(model);
        labw3.setText("Total Waiting time " + (total));
        ll.setText("\nAverage Waitng time " + (avg));
    }

    public void PS() {/////////////////////////////////////////////////////////////////////

        pr1.setVisible(true);
        pr2.setVisible(true);
        pr3.setVisible(true);
        pr4.setVisible(true);
        pr5.setVisible(true);
        pr6.setVisible(true);
        Queue q = new Queue(n);
        int x;
        float awt, atat;
        int[] p = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = i + 1;
        }
        q.Insert(p[0], Integer.parseInt(l1.getText()), Integer.parseInt(pr1.getText()));
        q.Insert(p[1], Integer.parseInt(l2.getText()), Integer.parseInt(pr2.getText()));
        q.Insert(p[2], Integer.parseInt(l3.getText()), Integer.parseInt(pr3.getText()));
        q.Insert(p[3], Integer.parseInt(t1.getText()), Integer.parseInt(pr4.getText()));
        q.Insert(p[4], Integer.parseInt(b2.getText()), Integer.parseInt(pr5.getText()));
        q.Insert(p[5], Integer.parseInt(b3.getText()), Integer.parseInt(pr6.getText()));

        //n is number of process
        //p is process
        //pr is process priority
        //bt is process burst time
        //wt is wait time
        // tat is turnaround time
        //awt is average waiting time
        //atat is average turnaround time
        wt.setValue(0, 0);
        awt = 0;
        tat.setValue(0, q.getV(0));
        atat = tat.getValue(0);
        for (int i = 1; i < n; i++) {
            wt.setValue(i, tat.getValue(i - 1));
            awt += wt.getValue(i);
            tat.setValue(i, wt.getValue(i) + q.getV(i));
            atat += tat.getValue(i);
        }

        awt /= n;
        atat /= n;

        if (time.x == null) {
            time.x = new time();
            time.x.setVisible(true);

            for (int l = 0; l < 6; l++) {
                for (int m = 1; m <= 100; m++) {
                    try {
                        Thread.sleep(5);
                    } catch (InterruptedException ex) {
                        System.out.println(ex);
                    }
                    time.l4.setText("PROCESS " + Integer.toString(l + 1));
                    time.x.bb.paintImmediately(0, 0, 1500, 1500);
                    time.x.jPanel1.paintImmediately(0, 0, 1500, 1500);
                    time.x.bb.setStringPainted(true);
                    time.x.bb.setValue(m);
                    time.ll.setText(Double.toString(wt.getValue(l)) + " SEC");
                    time.ll2.setText(Double.toString(tat.getValue(l)) + " SEC");
                }
                if (l == 5) {
                    time.x.setVisible(false);
                }
            }

        } else {

            time.x.setVisible(true);
            for (int l = 0; l < 6; l++) {
                for (int m = 1; m <= 100; m++) {
                    try {
                        Thread.sleep(5);
                    } catch (InterruptedException ex) {
                        System.out.println(ex);
                    }
                    time.l4.setText("PROCESS " + Integer.toString(l + 1));
                    time.x.bb.paintImmediately(0, 0, 1500, 1500);
                    time.x.jPanel1.paintImmediately(0, 0, 1500, 1500);
                    time.x.bb.setStringPainted(true);
                    time.x.bb.setValue(m);
                    time.l4.setText("PROCESS " + Integer.toString(l + 1));
                    time.ll2.setText(Double.toString(tat.getValue(l)) + " SEC");
                }
                if (l == 5) {
                    time.x.setVisible(false);
                }
            }
        }

        l1.setText("");
        l2.setText("");
        l3.setText("");
        t1.setText("");
        b2.setText("");
        b3.setText("");
        q1.setText("");

        String g = String.valueOf(q.getV(0));
        String jh = String.valueOf(wt.getValue(0));
        String jhh = String.valueOf(tat.getValue(0));
        String fh = String.valueOf(q.getV(1));
        String ah = String.valueOf(wt.getValue(1));
        String bh = String.valueOf(tat.getValue(1));
        String zh = String.valueOf(q.getV(2));
        String xh = String.valueOf(wt.getValue(2));
        String ch = String.valueOf(tat.getValue(2));
        String eh = String.valueOf(q.getV(3));
        String yh = String.valueOf(wt.getValue(3));
        String th = String.valueOf(tat.getValue(3));
        DefaultTableModel model = (DefaultTableModel) tt.getModel();
        String[] str = {String.valueOf(q.getP(0)), g + "              ", jh + "              ", jhh + "              "};
        String[] str1 = {String.valueOf(q.getP(1)), fh + "              ", ah + "              ", bh + "              "};
        String[] str2 = {String.valueOf(q.getP(2)), zh + "              ", xh + "              ", ch + "              "};
        String[] str3 = {String.valueOf(q.getP(3)), eh + "              ", yh + "              ", th + "              "};
        String[] str4 = {String.valueOf(q.getP(4)), String.valueOf(q.getV(4)) + "              ", String.valueOf(wt.getValue(4)) + "              ", String.valueOf(tat.getValue(4)) + "              "};
        String[] str5 = {String.valueOf(q.getP(5)), String.valueOf(q.getV(5)) + "              ", String.valueOf(wt.getValue(5)) + "              ", String.valueOf(tat.getValue(5)) + "              "};
        model.addRow(str);
        model.addRow(str1);
        model.addRow(str2);
        model.addRow(str3);
        model.addRow(str4);
        model.addRow(str5);
        tt.setModel(model);
        labw3.setText("Total Waiting time " + (awt));
        ll.setText("\nAverage Waitng time " + (atat));

    }

    public void FIFO() {

    }

    public void LIFO() {

    }

    public void VanishBoxes() {

        jLabel11.setVisible(false);
        jLabel12.setVisible(false);
        jLabel13.setVisible(false);
        jLabel14.setVisible(false);
        jLabel15.setVisible(false);
        jLabel16.setVisible(false);
        pr1.setVisible(false);
        pr2.setVisible(false);
        pr3.setVisible(false);
        pr4.setVisible(false);
        pr5.setVisible(false);
        pr6.setVisible(false);

        jLabel17.setVisible(false);

    }

    public void AbraKaDabra() {

        jLabel17.setVisible(true);
        jLabel11.setVisible(true);
        jLabel12.setVisible(true);
        jLabel13.setVisible(true);
        jLabel14.setVisible(true);
        jLabel15.setVisible(true);
        jLabel16.setVisible(true);

        pr1.setVisible(true);
        pr2.setVisible(true);
        pr3.setVisible(true);
        pr4.setVisible(true);
        pr5.setVisible(true);
        pr6.setVisible(true);
        pr1.setOpaque(true);
        pr2.setOpaque(true);
        pr3.setOpaque(true);
        pr4.setOpaque(true);
        pr5.setOpaque(true);
        pr6.setOpaque(true);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new project().setVisible(true);
                jLabel11.setVisible(false);
                jLabel12.setVisible(false);
                jLabel13.setVisible(false);
                jLabel14.setVisible(false);
                jLabel15.setVisible(false);
                jLabel16.setVisible(false);
                pr1.setVisible(false);
                pr2.setVisible(false);
                pr3.setVisible(false);
                pr4.setVisible(false);
                pr5.setVisible(false);
                pr6.setVisible(false);

                jLabel17.setVisible(false);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> COM;
    private javax.swing.JDesktopPane b1;
    private javax.swing.JTextField b2;
    private javax.swing.JTextField b3;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JDesktopPane jDesktopPane6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    public static javax.swing.JLabel jLabel11;
    public static javax.swing.JLabel jLabel12;
    public static javax.swing.JLabel jLabel13;
    public static javax.swing.JLabel jLabel14;
    public static javax.swing.JLabel jLabel15;
    public static javax.swing.JLabel jLabel16;
    public static javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField l1;
    private javax.swing.JTextField l2;
    private javax.swing.JTextField l3;
    private javax.swing.JLabel labw3;
    private javax.swing.JLabel ll;
    private javax.swing.JButton ok;
    public static javax.swing.JTextField pr1;
    public static javax.swing.JTextField pr2;
    public static javax.swing.JTextField pr3;
    public static javax.swing.JTextField pr4;
    public static javax.swing.JTextField pr5;
    public static javax.swing.JTextField pr6;
    private javax.swing.JTextField q1;
    private javax.swing.JTextField t1;
    private javax.swing.JTable tt;
    private javax.swing.JTextField txt;
    // End of variables declaration//GEN-END:variables
}
